#!/bin/bash

VALGRIND=1
if [ "$1" = "-v" ]; then
	VALGRIND=0
fi

make clean
make -j 4
if [ $VALGRIND = 1 ]; then
	valgrind --leak-check=full --suppressions=valgrind.supp --error-exitcode=1 ./test || exit 1
else
	./test || exit 1
fi

echo Automatic part
PIDS=""
for eee in AAAA:0:1:somekey:6000 BBBB:1:1:somekey:6001 CCCC:1:3:somekey:6002 DDDD:0:2:somekey:6003 EEEE:1:2:None:6004 FFFF:0:3:None:6005 GGGG:1:2:badkey:6006; do
	sta=$(echo $eee | cut -f 1 -d ':')
	rep=$(echo $eee | cut -f 2 -d ':')
	cov=$(echo $eee | cut -f 3 -d ':')
	psk=$(echo $eee | cut -f 4 -d ':')
	port=$(echo $eee | cut -f 5 -d ':')
	if [ $VALGRIND = 1 ]; then
		valgrind --leak-check=full --error-exitcode=1 --log-file=${sta}.val --gen-suppressions=all \
			--suppressions=valgrind.supp ./testnet ${sta} ${rep} ${cov} ${psk} ${port} > ${sta}.log &
		PIDS+=" $!"
	else
		./testnet ${sta} ${rep} ${cov} ${psk} ${port} > ${sta}.log &
		PIDS+=" $!"
	fi
done

sleep 120
for eee in 6000 6001 6002 6003 6004 6005 6006; do
	# needs to retry because testnet also emulates typing internally
	# and it may intermingle with the reset command
	if [ $(($eee % 2)) -eq 0 ]; then
		while echo -e '\r!reset\r' >/dev/tcp/localhost/$eee; do
			echo "Killing port $eee with reset"
			sleep 1
		done
	else
		while echo -e '\r!defconfig\r' >/dev/tcp/localhost/$eee; do
			echo "Killing port $eee with defconfig"
			sleep 1
		done
	fi
done

ERR=0
for P in $PIDS; do
	if ! wait $P; then
		ERR=1
	fi
done
if [ "$ERR" != 0 ]; then
	echo
	echo Execution error, check logs
	echo
	exit 1
fi

echo Interactive/TNC part
PIDS=""
for eee in AAAA:0:1:somekey:6000 BBBB:0:1:somekey:6001; do
	sta=$(echo $eee | cut -f 1 -d ':')
	rep=$(echo $eee | cut -f 2 -d ':')
	cov=$(echo $eee | cut -f 3 -d ':')
	psk=$(echo $eee | cut -f 4 -d ':')
	port=$(echo $eee | cut -f 5 -d ':')
	if [ $VALGRIND = 1 ]; then
		valgrind --leak-check=full --error-exitcode=1 --log-file=${sta}.val --gen-suppressions=all \
			--suppressions=valgrind.supp ./testnet2 ${sta} ${rep} ${cov} ${psk} ${port} > ${sta}.log &
		PIDS+=" $!"
	else
		./testnet2 ${sta} ${rep} ${cov} ${psk} ${port} > ${sta}.log &
		PIDS+=" $!"
	fi
done

# uses 6000 (client) as TNC and uses port 6001 just to stop the server
sleep 1
./switch_test.py 6000 6001

ERR=0
for P in $PIDS; do
	if ! wait $P; then
		ERR=1
	fi
done
if [ "$ERR" != 0 ]; then
	echo
	echo Execution error, check logs
	echo
	exit 1
fi

make coverage
